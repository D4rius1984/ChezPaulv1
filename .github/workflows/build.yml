name: Build Android APK

on:
  push:
    branches:
      - main  # Exécute lors d'un push sur la branche 'main'

jobs:
  build:
    runs-on: ubuntu-latest  # Utilise un runner Ubuntu sur GitHub Actions

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Verify Java Installation
      run: |
        java -version
        javac -version

    - name: Install Android SDK Command-line tools
      run: |
        mkdir -p $HOME/android-sdk/cmdline-tools
        curl -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-6858069_latest.zip
        unzip commandlinetools.zip -d $HOME/android-sdk/cmdline-tools
        rm commandlinetools.zip
        echo "export ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "export PATH=$ANDROID_HOME/cmdline-tools/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

    - name: Install Android SDK
      run: |
        # Mettre à jour le sdkmanager
        curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-6858069_latest.zip -o tools.zip
        unzip tools.zip -d $ANDROID_HOME
        rm tools.zip
        
        # Accepter les licences
        yes | sdkmanager --licenses
        
        # Installer les outils nécessaires
        sdkmanager --update
        sdkmanager "platform-tools" "build-tools;30.0.3" "platforms;android-34"
        sdkmanager "system-images;android-34;google_apis;x86_64"
        sdkmanager "emulator"

    - name: Build APK
      run: |
        ./gradlew assembleRelease
        # Si tu veux une version debug, remplace assembleRelease par assembleDebug

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: apk
        path: app/build/outputs/apk/release/app-release.apk
